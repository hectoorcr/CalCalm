// Selecci贸n de elementos clave
const formSteps = document.querySelectorAll('.form-step');
const nextBtns = document.querySelectorAll('.btn-next');
const prevBtns = document.querySelectorAll('.btn-prev');
const progressFill = document.querySelector('.progress-fill');
const stepIndicators = document.querySelectorAll('.step-indicator');
const routineForm = document.querySelector('.routine-form');
const resultsSection = document.querySelector('.results-section');

let currentStep = 0;

// Funci贸n para mostrar el paso actual
function showStep(step) {
    formSteps.forEach((formStep, index) => {
        formStep.classList.toggle('active', index === step);
    });

    stepIndicators.forEach((indicator, index) => {
        indicator.classList.remove('active', 'completed');
        if (index < step) indicator.classList.add('completed');
        if (index === step) indicator.classList.add('active');
    });

    const progressPercent = ((step) / (formSteps.length - 1)) * 100;
    progressFill.style.width = `${progressPercent}%`;
}

// Avanzar al siguiente paso
nextBtns.forEach(btn => {
    btn.addEventListener('click', () => {
        if (currentStep < formSteps.length - 1) {
            currentStep++;
            showStep(currentStep);
        }
    });
});

// Retroceder al paso anterior
prevBtns.forEach(btn => {
    btn.addEventListener('click', () => {
        if (currentStep > 0) {
            currentStep--;
            showStep(currentStep);
        }
    });
});

// Mostrar el primer paso al cargar
showStep(currentStep);

// Generar resultados al enviar formulario
routineForm.addEventListener('submit', (e) => {
    e.preventDefault();

    const formData = new FormData(routineForm);
    const routine = {};

    formData.forEach((value, key) => {
        if (!routine[key]) {
            routine[key] = value;
        } else {
            // Si ya existe, convertimos en array
            routine[key] = [].concat(routine[key], value);
        }
    });

    renderResults(routine);
});

// Funci贸n para renderizar resultados
function renderResults(data) {
    resultsSection.innerHTML = ''; // Limpiar contenido anterior

    const header = document.createElement('div');
    header.className = 'results-header';
    header.innerHTML = `<h2>Tu Rutina Personalizada</h2>`;
    resultsSection.appendChild(header);

    const routineDays = document.createElement('div');
    routineDays.className = 'routine-days';

    Object.keys(data).forEach((dayKey) => {
        const dayCard = document.createElement('div');
        dayCard.className = 'day-card';
        dayCard.innerHTML = `
            <div class="day-header">
                <div class="day-number">${dayKey}</div>
                <div class="day-title">${data[dayKey]}</div>
            </div>
        `;
        routineDays.appendChild(dayCard);
    });

    resultsSection.appendChild(routineDays);
    resultsSection.scrollIntoView({ behavior: 'smooth' });
}

// Funci贸n opcional para descargar resultados como texto
function downloadResults() {
    let content = '';
    Object.keys(routineForm.elements).forEach(key => {
        const input = routineForm.elements[key];
        if (input.name && input.value) {
            content += `${input.name}: ${input.value}\n`;
        }
    });
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'rutina.txt';
    a.click();
    URL.revokeObjectURL(url);
}

const downloadBtn = document.querySelector('.btn-download');
if (downloadBtn) {
    downloadBtn.addEventListener('click', downloadResults);
}
